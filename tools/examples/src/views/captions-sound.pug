doctype html
html
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge,chrome=1')
    title Captions and Sound
    meta(name='description', content='')
    meta(name='viewport', content='width=device-width')
    link(rel='stylesheet', href='css/common.css')
    // Examples dependencies, these are only necessary for examples
    script(src='js/common.js')
    // External dependencies
    script(src='../node_modules/soundjs/lib/soundjs.min.js')
    script(src='../node_modules/soundjs/lib/flashaudioplugin.min.js')
    script(src='../node_modules/tweenjs/lib/tweenjs.min.js')
    script(src='../node_modules/preloadjs/lib/preloadjs.min.js')
    script(src='../node_modules/easeljs/lib/easeljs.combined.js')
    // Library and modules
    script(src='../dist/core.js')
    script(src='../dist/modules/debug.js')
    script(src='../dist/modules/captions.js')
    script(src='../dist/modules/sound.js')
    script(src='../dist/modules/easeljs-display.js')
    script(src='../dist/modules/easeljs-ui.js')
  body.md
    #content.canvas
      nav
        button#canvas Application
        button#code Code
        button#back Back
      #captions
      canvas#stage(width='800', height='500')
      pre#codeDisplay.
      script.
        // Import classes
        var Application = include('springroll.Application'),
        Button = include('springroll.easeljs.Button'),
        EaselJSDisplay = include('springroll.EaselJSDisplay');
        var app = new Application({
        canvasId: "stage",
        captionsPath: "assets/config/captions2.json",
        display: EaselJSDisplay,
        displayOptions: {
        clearView: true
        },
        preload: 'assets/images/button.png'
        });
        // The list of sounds to load
        var voContext = {
        // The name of the context or "group" to load sounds into
        "context":"vo",
        // The relative path to the VO sound files
        "path":"assets/sound/vo/",
        // The collection of sound assets to load
        // where src is the base name of the file and id
        // is the sound alias we'll refer to later
        "sounds": [
        {
        "id" : "Volume",
        "src" : "301"
        },
        {
        "id" : "GoodJob",
        "src" : "328"
        }
        ]
        };
        app.once('init', function()
        {
        // Add the config
        this.sound.addContext(voContext);
        // Reference to the VO Player
        var voPlayer = this.voPlayer;
        // Add the buttons and handle the clicks
        this.addButton('Volume', 200, 100, function()
        {
        var vol = 'Volume';
        voPlayer.play(vol);
        });
        this.addButton('GoodJob', 340, 100, function()
        {
        voPlayer.play('GoodJob');
        });
        this.addButton('Both', 480, 100, function()
        {
        voPlayer.play(['GoodJob', 'Volume']);
        });
        this.addButton('Stop', 340, 200, function()
        {
        voPlayer.stop();
        });
        });
        // Generic method for adding a button to the stage
        // add a label and some positioning information
        app.addButton = function(label, x, y, handler)
        {
        // Create a play button
        var button = new Button(this.getCache('button'), {
        text: label,
        font: "16px Arial",
        color: "#ffffff"
        });
        button.x = x;
        button.y = y;
        // Play the AUDIO
        button.on('buttonPress', handler);
        this.display.stage.addChild(button);
        return button;
        };
