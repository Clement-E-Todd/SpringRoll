doctype html
html
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge,chrome=1')
    title Sound Example
    meta(name='description', content='')
    meta(name='viewport', content='width=device-width')
    link(rel='stylesheet', href='css/common.css')
    // Examples dependencies, these are only necessary for examples
    script(src='js/common.js')
    // External dependencies
    script(src='../node_modules/soundjs/lib/soundjs.min.js')
    script(src='../node_modules/soundjs/lib/flashaudioplugin.min.js')
    script(src='../node_modules/tweenjs/lib/tweenjs.min.js')
    script(src='../node_modules/preloadjs/lib/preloadjs.min.js')
    script(src='../node_modules/easeljs/lib/easeljs.combined.js')
    // Library and modules
    script(src='../dist/core.js')
    script(src='../dist/modules/debug.js')
    script(src='../dist/modules/easeljs-display.js')
    script(src='../dist/modules/easeljs-ui.js')
    script(src='../dist/modules/sound.js')
  body.md
    #content.canvas
      nav
        button#canvas Application
        button#code Code
        button#back Back
      canvas#stage(width='800', height='500')
      pre#codeDisplay.
      script.
        var Application = include('springroll.Application'),
        EaselJSDisplay = include('springroll.EaselJSDisplay'),
        Button = include('springroll.easeljs.Button'),
        Shape = include('createjs.Shape'),
        Tween = include('createjs.Tween');
        var app = new Application({
        canvasId: "stage",
        configPath: "assets/config/config-sounds.json",
        display: EaselJSDisplay,
        displayOptions: {
        clearView: true
        },
        autoPause: true,//automatically pause all audio when window loses focus
        preload: 'assets/images/button.png'
        });
        app.once('init', function()
        {
        var sound = this.sound;
        this.addButton("Food Chute", 335, 60, function()
        {
        sound.play("FoodChute");
        });
        this.addButton("Tip Earned", 335, 120, function()
        {
        sound.play("TipEarned");
        });
        this.addButton("Trash Chute", 335, 180, function()
        {
        sound.play("TrashChute");
        });
        this.addButton("Title Music", 335, 300, function()
        {
        // sound.play() also works, but this using
        // the music setter fades in the audio
        // and fades out if music is being switched
        app.music = app.music ? null : "TitleMusic";
        });
        this.addButton("Pause/Resume", 470, 307, function()
        {
        if(app.musicInstance)
        {
        if(app.musicInstance.paused)
        app.musicInstance.resume();
        else
        app.musicInstance.pause();
        }
        }, 0.7);
        });
        // Simple convenience function for creating some
        // buttons and adding them to the stage
        app.addButton = function(text, x, y, onPress, scale)
        {
        var button = new Button(this.getCache('button'), {
        text: text,
        font: "16px Arial",
        color: "#ffffff"
        });
        button.x = x || 0;
        button.y = y || 0;
        if(scale)
        button.scaleX = button.scaleY = scale;
        button.on('buttonPress', onPress);
        this.display.stage.addChild(button);
        }
