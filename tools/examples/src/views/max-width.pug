doctype html
html
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge,chrome=1')
    title Max Width Example
    meta(name='description', content='')
    meta(name='viewport', content='width=device-width')
    link(rel='stylesheet', href='css/common.css')
    // Examples dependencies, these are only necessary for examples
    link(rel='stylesheet', href='../node_modules/google-code-prettify/bin/prettify.min.css')
    script(src='../node_modules/google-code-prettify/bin/prettify.min.js')
    script(src='../node_modules/google-code-prettify/bin/run_prettify.min.js')
    script(src='js/common.js')
    // External dependencies
    script(src='../node_modules/tweenjs/lib/tweenjs.min.js')
    script(src='../node_modules/easeljs/lib/easeljs.combined.js')
    script(src='../node_modules/preloadjs/lib/preloadjs.min.js')
    // Library and modules
    script(src='../dist/core.js')
    script(src='../dist/modules/debug.js')
    script(src='../dist/modules/easeljs-display.js')
  body.fullscreen
    #content.canvas
      nav
        button#canvas Application
        button#code Code
        button#back Back
      #framerate FPS: 00.000
      #stageContainer
        canvas#stage(width='800', height='500')
      pre#codeDisplay.
      script.
        var Application = include('springroll.Application'),
        Bitmap = include('createjs.Bitmap'),
        EaselJSDisplay = include('springroll.EaselJSDisplay');
        var app = new Application({
        maxWidth : 1000,
        framerate: "framerate",
        resizeElement : "stageContainer",
        canvasId: "stage",
        display: EaselJSDisplay,
        displayOptions: {
        clearView: true
        },
        preload: 'assets/images/background.jpg'
        });
        app.once('init', function()
        {
        var background = new Bitmap(this.getCache('background'));
        this.display.stage.addChild(background);
        // Center the image
        this.on('resize', function(w, h)
        {
        background.x = (w - background.image.width) / 2;
        });
        // Manually call resize
        this.triggerResize();
        });
